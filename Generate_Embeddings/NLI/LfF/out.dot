digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_3891eba6 [label="187: __getitem__()" name="data_loader::hans_dataset.__getitem__" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_54114194 [label="161: __init__()" name="data_loader::hans_dataset.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_c3022f12 [label="230: load_hans()" name="data_loader::load_hans" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_0479b8d0 [label="118: load_mnli()" name="data_loader::load_mnli" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_dfa51d1d [label="263: load_snli()" name="data_loader::load_snli" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_fb95e0a0 [label="75: __getitem__()" name="data_loader::mnli_dataset.__getitem__" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_ff1f5c13 [label="49: __init__()" name="data_loader::mnli_dataset.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_04ea1954 [label="24: tokenize_sent()" name="data_loader::tokenize_sent" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_50bd616f [label="0: (global)()" name="generate_embeddings::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_5450295d [label="114: generate_embeddings()" name="generate_embeddings::generate_embeddings" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_7e13140e [label="160: main()" name="generate_embeddings::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_111e25cc [label="145: read_dataset()" name="generate_embeddings::read_dataset" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_bdc8d475 [label="96: save_embeddings_to_text_file()" name="generate_embeddings::save_embeddings_to_text_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_33e99e86 [label="0: (global)()" name="test::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d119ac65 [label="84: forward()" name="test::MainModel.forward" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_53c870e0 [label="159: generate_prediction_file()" name="test::generate_prediction_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_57e3217d [label="174: generate_prob_file()" name="test::generate_prob_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a196b5d0 [label="109: inference()" name="test::inference" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_3833c3d3 [label="208: main()" name="test::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_b3f347fb [label="192: read_dataset()" name="test::read_dataset" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a0f5c087 [label="0: (global)()" name="train::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_d122075e [label="100: forward()" name="train::MainModel.forward" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_10ce1ff8 [label="231: main()" name="train::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_3978d842 [label="216: save_dataset()" name="train::save_dataset" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a60cd033 [label="124: train()" name="train::train" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_59d9be44 [label="178: valid()" name="train::valid" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_d12207ge [label="100: forward()" name="generate_embeddings::MainModel.forward" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_3891eba6 -> node_04ea1954 [color="#D55E00" penwidth="2"];
node_3891eba6 -> node_04ea1954 [color="#D55E00" penwidth="2"];
node_c3022f12 -> node_54114194 [color="#56B4E9" penwidth="2"];
node_0479b8d0 -> node_ff1f5c13 [color="#000000" penwidth="2"];
node_dfa51d1d -> node_ff1f5c13 [color="#0072B2" penwidth="2"];
node_fb95e0a0 -> node_04ea1954 [color="#000000" penwidth="2"];
node_fb95e0a0 -> node_04ea1954 [color="#000000" penwidth="2"];
node_50bd616f -> node_7e13140e [color="#CC79A7" penwidth="2"];
node_5450295d -> node_bdc8d475 [color="#0072B2" penwidth="2"];
node_a60cd033 -> node_fb95e0a0 [color="#D55E00" penwidth="2"];
node_59d9be44 -> node_fb95e0a0 [color="#0072B2" penwidth="2"];
node_59d9be44 -> node_d122075e [color="#0072B2" penwidth="2"];
node_5450295d -> node_d12207ge [color="#0072B2" penwidth="2"];
node_5450295d -> node_fb95e0a0 [color="#0072B2" penwidth="2"];
node_5450295d -> node_3891eba6 [color="#0072B2" penwidth="2"];
node_7e13140e -> node_c3022f12 [color="#D55E00" penwidth="2"];
node_7e13140e -> node_0479b8d0 [color="#D55E00" penwidth="2"];
node_7e13140e -> node_5450295d [color="#D55E00" penwidth="2"];
node_7e13140e -> node_5450295d [color="#D55E00" penwidth="2"];
node_7e13140e -> node_5450295d [color="#D55E00" penwidth="2"];
node_7e13140e -> node_5450295d [color="#D55E00" penwidth="2"];
node_7e13140e -> node_111e25cc [color="#D55E00" penwidth="2"];
node_7e13140e -> node_111e25cc [color="#D55E00" penwidth="2"];
node_33e99e86 -> node_3833c3d3 [color="#D55E00" penwidth="2"];
node_a196b5d0 -> node_d119ac65 [color="#0072B2" penwidth="2"];
node_3833c3d3 -> node_c3022f12 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_0479b8d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_dfa51d1d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_53c870e0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_53c870e0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_53c870e0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_53c870e0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_53c870e0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_57e3217d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_57e3217d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_57e3217d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_57e3217d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_57e3217d [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_a196b5d0 -> node_3891eba6 [color="#000000" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_a196b5d0 [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_b3f347fb [color="#009E73" penwidth="2"];
node_3833c3d3 -> node_b3f347fb [color="#009E73" penwidth="2"];
node_a0f5c087 -> node_10ce1ff8 [color="#CC79A7" penwidth="2"];
node_a60cd033 -> node_d122075e [color="#D55E00" penwidth="2"];
node_10ce1ff8 -> node_0479b8d0 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_0479b8d0 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_0479b8d0 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_3978d842 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_3978d842 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_a60cd033 [color="#000000" penwidth="2"];
node_10ce1ff8 -> node_59d9be44 [color="#000000" penwidth="2"];
subgraph cluster_e9e0ec1d {
    node_04ea1954 node_0479b8d0 node_c3022f12 node_dfa51d1d;
    label="File: data_loader";
    name="data_loader";
    style="filled";
    graph[style=dotted];
    subgraph cluster_82de68e8 {
        node_ff1f5c13 node_fb95e0a0;
        label="Class: mnli_dataset";
        name="mnli_dataset";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_f3a30bcd {
        node_54114194 node_3891eba6;
        label="Class: hans_dataset";
        name="hans_dataset";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_b897c775 {
    node_bdc8d475 node_5450295d node_111e25cc node_7e13140e node_50bd616f;
    label="File: generate_embeddings";
    name="generate_embeddings";
    style="filled";
    graph[style=dotted];
    subgraph cluster_fb8db6ge {
        node_d12207ge;
        label="Class: MainModel";
        name="MainModel";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_0e75affb {
    node_a196b5d0 node_53c870e0 node_57e3217d node_b3f347fb node_3833c3d3 node_33e99e86;
    label="File: test";
    name="test";
    style="filled";
    graph[style=dotted];
    subgraph cluster_5b5d544c {
        node_d119ac65;
        label="Class: MainModel";
        name="MainModel";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_f1a4190e {
    node_59d9be44 node_a60cd033 node_3978d842 node_10ce1ff8 node_a0f5c087;
    label="File: train";
    name="train";
    style="filled";
    graph[style=dotted];
    subgraph cluster_fb8db6ff {
        node_d122075e;
        label="Class: MainModel";
        name="MainModel";
        style="filled";
        graph[style=dotted];
    };
};
}
