digraph G {
concentrate=true;
splines="ortho";
rankdir="LR";
subgraph legend{
    rank = min;
    label = "legend";
    Legend [shape=none, margin=0, label = <
        <table cellspacing="0" cellpadding="0" border="1"><tr><td>Code2flow Legend</td></tr><tr><td>
        <table cellspacing="0">
        <tr><td>Regular function</td><td width="50px" bgcolor='#cccccc'></td></tr>
        <tr><td>Trunk function (nothing calls this)</td><td bgcolor='#966F33'></td></tr>
        <tr><td>Leaf function (this calls nothing else)</td><td bgcolor='#6db33f'></td></tr>
        <tr><td>Function call</td><td><font color='black'>&#8594;</font></td></tr>
        </table></td></tr></table>
        >];
}node_bc5ac879 [label="217: load_paws()" name="data_loader::load_paws" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_0634206a [label="116: load_qqp()" name="data_loader::load_qqp" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_985c2221 [label="176: __getitem__()" name="data_loader::paws_dataset.__getitem__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_7eb7b2d5 [label="150: __init__()" name="data_loader::paws_dataset.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_5aca6650 [label="75: __getitem__()" name="data_loader::qqp_dataset.__getitem__" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6817b8fe [label="49: __init__()" name="data_loader::qqp_dataset.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_23eb315a [label="24: tokenize_sent()" name="data_loader::tokenize_sent" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a7113e9a [label="0: (global)()" name="generate_embeddings::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_a6c9cb93 [label="155: generate_embeddings()" name="generate_embeddings::generate_embeddings" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_35062a38 [label="184: main()" name="generate_embeddings::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_86997af2 [label="124: read_dataset()" name="generate_embeddings::read_dataset" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_daaf73c1 [label="139: save_embeddings_to_text_file()" name="generate_embeddings::save_embeddings_to_text_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_e2c9e7ce [label="0: (global)()" name="test::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_6afeb101 [label="210: generate_prediction_file()" name="test::generate_prediction_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_ac6a250b [label="223: generate_prob_file()" name="test::generate_prob_file" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_9e9f5ef0 [label="156: inference()" name="test::inference" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_a1306fc0 [label="238: main()" name="test::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_4f72369f [label="0: (global)()" name="train::(global)" shape="rect" style="rounded,filled" fillcolor="#966F33" ];
node_f8f14ddb [label="80: __init__()" name="train::GeneralizedCELoss.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_fa044cf0 [label="368: main()" name="train::main" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_5ba834a8 [label="167: read_dataset()" name="train::read_dataset" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_6d48e1f3 [label="233: train()" name="train::train" shape="rect" style="rounded,filled" fillcolor="#cccccc" ];
node_0d29d150 [label="193: valid()" name="train::valid" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_0e7bf1af [label="29: __init__()" name="util::EMA.__init__" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_f3337a4d [label="45: update()" name="util::EMA.update" shape="rect" style="rounded,filled" fillcolor="#6db33f" ];
node_bc5ac879 -> node_7eb7b2d5 [color="#E69F00" penwidth="2"];
node_0634206a -> node_6817b8fe [color="#56B4E9" penwidth="2"];
node_985c2221 -> node_23eb315a [color="#E69F00" penwidth="2"];
node_985c2221 -> node_23eb315a [color="#E69F00" penwidth="2"];
node_5aca6650 -> node_23eb315a [color="#000000" penwidth="2"];
node_5aca6650 -> node_23eb315a [color="#000000" penwidth="2"];
node_a7113e9a -> node_35062a38 [color="#56B4E9" penwidth="2"];
node_a6c9cb93 -> node_daaf73c1 [color="#009E73" penwidth="2"];
node_35062a38 -> node_bc5ac879 [color="#000000" penwidth="2"];
node_35062a38 -> node_bc5ac879 [color="#000000" penwidth="2"];
node_35062a38 -> node_bc5ac879 [color="#000000" penwidth="2"];
node_35062a38 -> node_a6c9cb93 [color="#000000" penwidth="2"];
node_35062a38 -> node_a6c9cb93 [color="#000000" penwidth="2"];
node_35062a38 -> node_a6c9cb93 [color="#000000" penwidth="2"];
node_35062a38 -> node_a6c9cb93 [color="#000000" penwidth="2"];
node_35062a38 -> node_a6c9cb93 [color="#000000" penwidth="2"];
node_35062a38 -> node_86997af2 [color="#000000" penwidth="2"];
node_35062a38 -> node_86997af2 [color="#000000" penwidth="2"];
node_e2c9e7ce -> node_a1306fc0 [color="#D55E00" penwidth="2"];
node_a1306fc0 -> node_bc5ac879 [color="#000000" penwidth="2"];
node_a1306fc0 -> node_6afeb101 [color="#000000" penwidth="2"];
node_a1306fc0 -> node_ac6a250b [color="#000000" penwidth="2"];
node_a1306fc0 -> node_9e9f5ef0 [color="#000000" penwidth="2"];
node_4f72369f -> node_fa044cf0 [color="#CC79A7" penwidth="2"];
node_fa044cf0 -> node_5ba834a8 [color="#000000" penwidth="2"];
node_fa044cf0 -> node_5ba834a8 [color="#000000" penwidth="2"];
node_fa044cf0 -> node_6d48e1f3 [color="#000000" penwidth="2"];
node_fa044cf0 -> node_0d29d150 [color="#000000" penwidth="2"];
node_fa044cf0 -> node_0e7bf1af [color="#000000" penwidth="2"];
node_fa044cf0 -> node_0e7bf1af [color="#000000" penwidth="2"];
node_6d48e1f3 -> node_f8f14ddb [color="#009E73" penwidth="2"];
node_6d48e1f3 -> node_f8f14ddb [color="#009E73" penwidth="2"];
node_6d48e1f3 -> node_f8f14ddb [color="#009E73" penwidth="2"];
node_6d48e1f3 -> node_f3337a4d [color="#009E73" penwidth="2"];
node_6d48e1f3 -> node_f3337a4d [color="#009E73" penwidth="2"];
node_6d48e1f3 -> node_f3337a4d [color="#009E73" penwidth="2"];
subgraph cluster_2146f035 {
    node_23eb315a node_0634206a node_bc5ac879;
    label="File: data_loader";
    name="data_loader";
    style="filled";
    graph[style=dotted];
    subgraph cluster_5b71224a {
        node_6817b8fe node_5aca6650;
        label="Class: qqp_dataset";
        name="qqp_dataset";
        style="filled";
        graph[style=dotted];
    };
    subgraph cluster_15f946be {
        node_7eb7b2d5 node_985c2221;
        label="Class: paws_dataset";
        name="paws_dataset";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_1ea589b4 {
    node_86997af2 node_daaf73c1 node_a6c9cb93 node_35062a38 node_a7113e9a;
    label="File: generate_embeddings";
    name="generate_embeddings";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_c7d48d46 {
    node_9e9f5ef0 node_6afeb101 node_ac6a250b node_a1306fc0 node_e2c9e7ce;
    label="File: test";
    name="test";
    style="filled";
    graph[style=dotted];
};
subgraph cluster_98654514 {
    node_5ba834a8 node_0d29d150 node_6d48e1f3 node_fa044cf0 node_4f72369f;
    label="File: train";
    name="train";
    style="filled";
    graph[style=dotted];
    subgraph cluster_368d03b3 {
        node_f8f14ddb;
        label="Class: GeneralizedCELoss";
        name="GeneralizedCELoss";
        style="filled";
        graph[style=dotted];
    };
};
subgraph cluster_0bb56630 {
    label="File: util";
    name="util";
    style="filled";
    graph[style=dotted];
    subgraph cluster_050517b5 {
        node_0e7bf1af node_f3337a4d;
        label="Class: EMA";
        name="EMA";
        style="filled";
        graph[style=dotted];
    };
};
}
